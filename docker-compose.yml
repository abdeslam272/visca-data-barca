services:
  postgres-dbt:
    image: postgres:14
    container_name: barca-postgres-dbt
    restart: always
    environment:
      POSTGRES_USER: dbt-barca
      POSTGRES_PASSWORD: dbt-barca
      POSTGRES_DB: dbt-barca_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./data:/data  # tu montes tes CSV ici pour ingestion

  #pgadmin for postgres-dbt
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres-dbt
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  dbt:
    build: 
      context: .
      dockerfile: Dockerfile.dbt
    container_name: barca-dbt
    volumes:
      - ./dbt/barca_project:/usr/app           # Le dossier du projet dbt
      - ./dbt/profiles.yml:/root/.dbt/profiles.yml  # Fichier de connexion Ã  la BDD
    working_dir: /usr/app
    depends_on:
      - postgres-dbt
    entrypoint: [ "tail", "-f", "/dev/null" ]  # pour laisser le conteneur tourner

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: barca-streamlit
    depends_on:
      - postgres-dbt
    ports:
      - "8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app   # Dossier contenant app.py, requirements.txt, etc.

  # Postgres for Airflow
  postgres-airflow:
    image: postgres:13
    container_name: postgres-airflow
    environment:
      POSTGRES_DB: airflow-db
      POSTGRES_USER: airflow-user
      POSTGRES_PASSWORD: airflow-password
    ports:
      - "5433:5432" # Change port to avoid conflicts
    restart: always

  # Airflow
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow-user:airflow-password@postgres-airflow:5432/airflow-db
      AIRFLOW__WEBSERVER__SECRET_KEY: mysecretkey
    ports:
      - "8080:8080"
    restart: always
    entrypoint: ["/bin/bash", "-c", "airflow db init && airflow webserver"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - /var/run/docker.sock:/var/run/docker.sock # Monter le socket Docker dans le conteneur Airflow


  # Airflow Scheduler
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow-user:airflow-password@postgres-airflow:5432/airflow-db
      AIRFLOW__WEBSERVER__SECRET_KEY: mysecretkey
    restart: always
    entrypoint: ["airflow", "scheduler"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - /var/run/docker.sock:/var/run/docker.sock # Monter le socket Docker dans le conteneur Airflow

      
volumes:
  pgdata:
  pgadmin_data: